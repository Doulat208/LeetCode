class Solution {
    public int fib(int n) {
        
        // Using recursion :
        // if(n <= 1){
        //     return n;
        // }
           
        // return fib(n-1) + fib(n -2);
        

        // // without recursion:
        // if (n <= 1) return n;
        // int a = 0, b = 1;
        // for (int i = 2; i <= n; i++) {
        //     int temp = b;
        //     b = a + b;
        //     a = temp;
        // }
        // return b;


        if(n == 1 || n == 0) return n;
        int arr[] = new int[n+1];
        arr[0] = 0;
        arr[1] = 1;
        for(int i = 2; i < n+1; i++) arr[i] = -1;
        
        return helper(n, arr);
    }

    public int helper(int n, int[] arr){
        if(arr[n] != -1) return arr[n];
        else return arr[n] = helper(n-1, arr) + helper(n-2, arr);
    }

}
