class Solution {
    public int climbStairs(int n) {
        if(n <= 0){
            return 0;
        }else if(n == 1) return 1;
        else if(n == 2) return 2;

        // int[] arr = new int[n+1];
        // arr[0] = 0;
        // arr[1] = 1;
        // arr[2] = 2;

        // for(int i=3; i < n+1; i++){
        //     arr[i] = -1;
        // }
        
        // return helper(n,arr) ;

        // if(n <= 2) return n;

        int a = 1;
        int b = 2;
        int res=0;
        for(int i=3; i <= n; i++){
            res = a + b;
            a = b;
            b = res;
        }

        return res;
    }

    // public int helper(int n, int[] arr){
    //     if(n == 1) return 1;
    //     if(n == 2) return 2;
    //     if(n==0) return 0;

    //     return arr[n] = helper(n-1, arr) + helper(n-2, arr);
    // }
}
